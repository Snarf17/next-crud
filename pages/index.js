import { Button, Card, CardBody, CardFooter, Container, Flex, Heading, Stack, Text, useDisclosure } from "@chakra-ui/react";
import Head from "next/head";
import ModalCreate from "./components/modal-create";
import { API } from "./api/api";
import Swal from "sweetalert2";
import { useEffect, useState } from "react";
import ModalEdit from "./components/modal-edit";
import ModalDetails from "./components/modal-details";

export default function Home() {
  // for Props Show Modal Create
  const { isOpen: isCreateOpen , onOpen: onCreateOpen, onClose: onCreateClose } = useDisclosure()
  const { isOpen: isEditOpen , onOpen: onEditOpen, onClose: onEditClose } = useDisclosure()
  const { isOpen: isDetailsOpen , onOpen: onDetailsOpen, onClose: onDetailsClose } = useDisclosure()
  const { isOpen: isDeleteOpen , onOpen: onDeleteOpen, onClose: onDeleteClose } = useDisclosure()

const [items, setItems] = useState({})
const handleEdit = (data) => {
  setItems(data)
  onEditOpen()
}

const [details, setDetails] = useState({})
const handleDetails = (data) => {
  setDetails(data)
  onDetailsOpen()
}

const handleDelete = async(id) => {
  try {
    Swal.fire({
      title: 'Are you sure?',
      text: "You won't be able to revert this!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
      if (result.isConfirmed) {
        Swal.fire(
          'Deleted!',
          'Your file has been deleted.',
          'success'
        )
      }
    })
    const response = await API.delete(`/users/${id}`)
  } catch (error) {
    console.log(error);
  }
}
  const [data, setData] = useState([])
  async function getData() {
    try {
      const response = await API.get('/users')
      setData(response.data)
      if (response.status === 201) {
        Swal.fire({
          position: 'center',
          icon: 'success',
          title: 'Your work has been saved',
          showConfirmButton: false,
          timer: 1500
        })
      }
    } catch (error) {
      console.log(error); 
    }
  }
// console.log(data);
  useEffect(() => {
    getData()
  },[])

  return (
    <>
      <Head>
        <title>Crud Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container maxW={'container.lg'} mt={30}>
        <Flex justifyContent={"space-between"} px={3} py={5} >
          <Heading>List Posts Users</Heading>
          <Button variant="solid" shadow={'lg'} onClick={onCreateOpen}>
            Create
          </Button>
        </Flex>
        {data.map((items,index) => (
          <Card
            key={index}
            direction={{ base: "column", sm: "row" }}
            overflow="hidden"
            variant="outline"
            shadow={'xl'}
            mb={4}
          >
            <Stack>
              <CardBody>
                <Heading size="md">{items.name}</Heading>

                <Text py="2">
                  {items.desc}
                </Text>
              </CardBody>

              <CardFooter gap={3}>
                <Button variant="solid" colorScheme="blue" onClick={(data) => handleDetails(items)}>
                  Details
                </Button>
                <Button variant="solid" colorScheme="green" onClick={(data) => handleEdit(items)}>
                  Edit
                </Button>
                <Button variant="solid" colorScheme="red" onClick={(id) => handleDelete(items.id)}>
                  Delete
                </Button>
              </CardFooter>
            </Stack>
          </Card>
        ))}
      </Container>

      <ModalCreate isOpen={isCreateOpen} onClose={onCreateClose}/>
      <ModalEdit Open={isEditOpen} Close={onEditClose} data={items}/>
      <ModalDetails isOpen={isDetailsOpen} onClose={onDetailsClose} data={details}/>
    </>
  );
}
